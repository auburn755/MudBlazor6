// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace MudBlazor6.Models;

public partial class CJDataContext : DbContext
{
    public CJDataContext(DbContextOptions<CJDataContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Job> Jobs { get; set; }

    public virtual DbSet<Unit> Units { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<Workshop> Workshops { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Job>(entity =>
        {
            entity.HasKey(e => e.JobId).HasName("Job_pkey");

            entity.ToTable("Job");

            entity.Property(e => e.JobName)
                .IsRequired()
                .HasMaxLength(100);

            entity.HasOne(d => d.Unit).WithMany(p => p.Jobs)
                .HasForeignKey(d => d.UnitId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Job_Unit");

            entity.HasOne(d => d.Workshop).WithMany(p => p.Jobs)
                .HasForeignKey(d => d.WorkshopId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Job_Workshop");
        });

        modelBuilder.Entity<Unit>(entity =>
        {
            entity.HasKey(e => e.UnitId).HasName("Unit_pkey");

            entity.ToTable("Unit");

            entity.Property(e => e.UnitName)
                .IsRequired()
                .HasMaxLength(5);
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("User_pkey");

            entity.ToTable("User");

            entity.Property(e => e.Password)
                .IsRequired()
                .HasColumnType("character varying");
            entity.Property(e => e.Role)
                .IsRequired()
                .HasMaxLength(15);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Workshop>(entity =>
        {
            entity.HasKey(e => e.WorkshopId).HasName("Workshop_pkey");

            entity.ToTable("Workshop");

            entity.Property(e => e.WorkshopName)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}